<?php defined('BASEPATH') OR exit('No direct script access allowed');
   
/*
 * Controller for handling anggota module
 * @author : Doni Setio Pambudi (donisp06@gmail.com)
 */
class Issn extends CI_Controller {

	/*
	 * constructor class
	 */
	public function __construct() {
		parent::__construct();

		//set module, enable for authentication
		//$this->auth->set_default_module('anggota');
		//enable dibawah ini jika divalidasi semua
		//$this->auth->validate(TRUE);
		//enable dibawah ini jika divalidasi user telah login saja
		//$this->auth->validate(TRUE, TRUE);

		//load this page model
		$this->load->model('m_data_issn');
		//load this page model
		$this->load->model('m_publikasi_dosen');
		$this->load->model('m_log_sistem');

		//load foregin lang if exist
		$this->lang->load('module/detil_kode_publikasi');
		$this->lang->load('module/anggota');
		$this->lang->load('module/pegawai');
		$this->lang->load('module/report');

		//load lang, place this module after foreign lang, so module_ not overriden by foreign lang
		$this->lang->load('module/publikasi_dosen');

  	}


	public function index() 
	{
		//set informasi halaman
		$this->site_info->set_page_title('Manajemen Data ISSN');
		//set breadcrumb
		$this->site_info->add_breadcrumb('Manajemen Data ISSN');
		//add menu highlight
		$this->site_info->set_current_module('dev');
		$this->site_info->set_current_submodule('manage_issn');

		$this->auth->validate(TRUE, TRUE);

		$this->asset_library->add_masterpage_script();
		$this->asset_library->add_js('js/pages/issn.js');
		$this->asset_library->add_js('plugins/bootstrap-datepicker/js/bootstrap-datepicker.min.js');
		$this->asset_library->add_js('plugins/jquery-sortable.js');
		$this->asset_library->add_js('plugins/jquery-inputmask/jquery.inputmask.bundle.js');
		$this->asset_library->add_css('plugins/bootstrap-datepicker/css/bootstrap-datepicker3.css', 'core-style');
		$this->load->model('m_data_issn');

		//load view
		$data['result'] = $this->m_data_issn->get();

		$this->load->view('base/header');
		$this->load->view('issn/index', $data);
		$this->load->view('base/footer');
	}

	public function klasifikasiissn(){
		//set informasi halaman
		$this->site_info->set_page_title('Klasifikasi Jurnal ISSN');
		//set breadcrumb
		$this->site_info->add_breadcrumb('Klasifikasi Jurnal ISSN');
		//add menu highlight
		$this->site_info->set_current_module('klasifikasi');
		$this->site_info->set_current_submodule('klas_issn');

		$this->auth->validate(TRUE, TRUE);

		// $this->asset_library->add_masterpage_script();
		$this->asset_library->add_js('js/pages/scopus.js');

		$this->load->view('base/header');
		$this->load->view('issn/klasifikasi');
		$this->load->view('base/footer');
	}
	/*
	 * method index controller anggota
     * generated by Doni's Framework Generator
	 *
	 * this method act as module entry point
	 *
	 * @author: Doni Setio Pambudi
	 * @access: public
	 * @return: no return, view a page
	 */

	/*
	 * get_datamaster method
     * generated by Doni's Framework Generator
	 *
	 * this method handle get datamaster request from datatables
	 *
	 * @author	Doni Setio Pambudi
	 * @access	public
	 * @return	json string
	 */
	public function getdatamaster(){
		//only ajax is allowed
		if(!$this->input->is_ajax_request()) show_404();

		//$this->auth->set_access('view');
		//$this->auth->validate();
		$this->load->model('m_data_issn');
		// $filter_cols = array('ang_pegawai' => $this->input->post('ang_pegawai'),
		// 			'peg_fakultas' => $this->input->post('peg_fakultas'),
		// 			'peg_jurusan' => $this->input->post('peg_jurusan'),
		// 			'pub_detilkodepub' => $this->input->post('pub_detilkodepub'));

		// $add_where = 'pub_judul LIKE \'%' . $this->input->post('pub_judul') . '%\'';
		
		// if ($this->input->post('pub_startyear') != "")
		// 	$add_where .= ' AND pub_tahun >= ' . $this->input->post('pub_startyear');
		// if ($this->input->post('pub_endyear') != "")
		// 	$add_where .= ' AND pub_tahun <= ' . $this->input->post('pub_endyear');


		//set default where query
		// $where = build_masterpage_filter($filter_cols, $add_where);

		//get data
		$this->m_data_issn->get_datatable('');
	}

	/*
	 * detail method
     * generated by Doni's Framework Generator
	 *
	 * this method handle get data detail from one primary key
	 *
	 * @author	Doni Setio Pambudi
	 * @access	public
	 * @return		json string
	 */
	public function detail(){
		//only ajax is allowed
		if(!$this->input->is_ajax_request()) show_404();

		//$this->auth->set_access('view');
		//$this->auth->validate();

		//search data with pk for default
		$search_data = $this->input->post('ang_id');
		//if no search data exist, response error
		if($search_data === NULL)
			ajax_response('error');

		//activate if search data is integer
		//$search_data = uintval($search_data);

		//get detail
		$detail = $this->m_anggota->get_by_column($search_data);

		//output return value
		if($detail !== NULL) ajax_response('ok', '', $detail);
		else ajax_response('error');
	}

	/*
	 * add method
     * generated by Doni's Framework Generator
	 *
	 * this method handle add data submit from master framework
	 *
	 * @author	Doni Setio Pambudi
	 * @access	public
	 * @return		json string result ok or error
	 */
	public function edd(){

		$this->auth->validate(TRUE, TRUE);
			//validation
		$this->load->library('form_validation');
		$this->form_validation->set_rules('issn_judul'       , 'lang:issn_judul'       , 'required');
		if ($this->form_validation->run())
		{
			$issn_id = $this->m_data_issn->insert(
				$this->input->post('issn_judul')
			);
			echo 'asdfasdfdsaf';
		}
		else
		{ 
			echo  'error';
		}
	}

	public function add_data(){
		$this->auth->validate(TRUE, TRUE);
		if($this->input->server('REQUEST_METHOD') == 'GET'){
			//set informasi halaman
			$this->site_info->set_page_title('Tambah Data ISSN');
			//set breadcrumb
			$this->site_info->add_breadcrumb('Tambah Data ISSN');
			//add menu highlight
			$this->site_info->set_current_module('dev');
			$this->site_info->set_current_submodule('manage_issn');

			// $this->asset_library->add_masterpage_script();
			$this->asset_library->add_js('js/pages/add_issn.js');

			$this->load->view('base/header');
			$this->load->view('issn/add');
			$this->load->view('base/footer');
		}
		else if($this->input->server('REQUEST_METHOD') == 'POST'){

			$this->auth->validate(TRUE, TRUE);
				//validation
			$this->load->library('form_validation');
			$this->form_validation->set_rules('issn_judul'       , 'lang:issn_judul'       , 'required');
			if ($this->form_validation->run())
			{
				$issn_id = $this->m_data_issn->insert(
					$this->input->post('issn_judul')
				);
				ajax_response();
			}
			else
			{ 
				echo  'error';
			}
		}
	}
	/*
	 * edit method
     * generated by Doni's Framework Generator
	 *
	 * this method handle edit data submit from master framework
	 *
	 * @author	Doni Setio Pambudi
	 * @access	public
	 * @return		json string result ok or error
	 */
	public function edit(){
		//$this->auth->set_access('edit');
		//$this->auth->validate();

		//call save method
		$this->save();
	}

	/*
	 * save method
     * generated by Doni's Framework Generator
	 *
	 * private method handle add and edit method
	 *
	 * @author	Doni Setio Pambudi
	 * @access	private
	 * @return		json string result ok or error
	 */
	private function save(){
		if(!$this->input->is_ajax_request()) show_404();
		// return 'jojojo';
		// die();

		//validation
		$this->load->library('form_validation');
		$this->form_validation->set_rules('issn_judul'       , 'lang:issn_judul'       , 'required');
		$this->form_validation->set_rules('issn_id'       , 'lang:issn_id'       , 'integer');

		if ($this->form_validation->run())
		{
			// insert
			if($this->input->post('issn_id') == '')
			{
				$issn_id = $this->m_anggota->insert(
					$this->input->post('issn_judul')
				);
				write_log('issn', 'insert', "PK = $issn_id");
				ajax_response();
			}
			// update
			else
			{
				$pk_id = $this->input->post('issn_id');
				//check if pk integer
				//$pk_id = uintval($pk_id);
				$this->m_data_issn->update(
					$pk_id,
					$this->input->post('issn_judul')
				);
				write_log('issn', 'update', "PK = $issn_id");
				ajax_response();
			}
		}
		else
		{ ajax_response('error', validation_errors()); }
	}

	/*
	 * delete method
     * generated by Doni's Framework Generator
	 *
	 * method handle delete from master framework
	 *
	 * @author	Doni Setio Pambudi
	 * @access	public
	 * @return		json string result ok or error
	 */
	public function delete(){
		if(!$this->input->is_ajax_request()) show_404();

		//$this->auth->set_access('delete');
		//$this->auth->validate();

		if($this->input->post('issn_id') === NULL) ajax_response();

		$all_deleted = array();
		foreach($this->input->post('issn_id') as $row){
			//$row = uintval($row);
			//permanent delete row, check MY_Model, you can set flag with ->update_single_column
			$this->m_data_issn->permanent_delete($row);

			//this is sample code if you cannot delete, but you must update status
			//$this->m_anggota->update_single_column('ang_deleted', 1, $row);
			$all_deleted[] = $row;
		}
		write_log('issn', 'delete', 'PK = ' . implode(",", $all_deleted));

		ajax_response();
	}


}