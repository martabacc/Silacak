<?php defined('BASEPATH') OR exit('No direct script access allowed');

/*
 * Controller for handling pegawai module
 * @author : Doni Setio Pambudi (donisp06@gmail.com)
 */
class Pegawai extends CI_Controller {

	/*
	 * constructor class
	 */
	public function __construct() {
		parent::__construct();

		//set module, enable for authentication
		//$this->auth->set_default_module('pegawai');
		//enable dibawah ini jika divalidasi semua
		//$this->auth->validate(TRUE);
		//enable dibawah ini jika divalidasi user telah login saja
		//$this->auth->validate(TRUE, TRUE);

		//load this page model
		$this->load->model('m_pegawai');

		//load foregin lang if exist
		$this->lang->load('module/fakultas');
		$this->lang->load('module/jurusan');

		//load lang, place this module after foreign lang, so module_ not overriden by foreign lang
		$this->lang->load('module/pegawai');
  	}

	/*
	 * method index controller pegawai
     * generated by Doni's Framework Generator
	 *
	 * this method act as module entry point
	 *
	 * @author: Doni Setio Pambudi
	 * @access: public
	 * @return: no return, view a page
	 */
	public function index(){
		//$this->auth->set_access('view');
		$this->auth->validate(TRUE, TRUE);

		//set informasi halaman
		$this->site_info->set_page_title($this->lang->line('module_title'), $this->lang->line('module_subtitle'));
		//set breadcrumb
		$this->site_info->add_breadcrumb($this->lang->line('module_title'));
		//add menu highlight
		$this->site_info->set_current_module('pegawai');

		//add masterpage script
		$this->asset_library->add_masterpage_script();
		//add page javascript
		$this->asset_library->add_js('js/pages/pegawai.js');
		$this->asset_library->add_js('js/jquery.csv-0.71.js');

		//filter pegawai
		$pegawai = -1;
        $pegawai_name = "";
        if($this->input->get("pegawai") != null){
        	$pegawai_id = $this->input->get("pegawai");
        	$pegawai = $this->m_pegawai->get_by_column($pegawai_id);

        }

		$data = array();
		$this->load->model('m_fakultas');
		$data['fakultas'] = $this->m_fakultas->get("ISNUMERIC(fak_id)=1 AND fak_singkatan is not NULL", "fak_id asc");
		$this->load->model('m_jurusan');
		$data['jurusan'] = $this->m_jurusan->get("jur_nama_inggris is not NULL", 'jur_id asc');
		$data["pegawai"] = json_encode($pegawai);

		//load view
		$this->load->view('base/header');
		$this->load->view('pegawai/master', $data);
		$this->load->view('base/footer');
	}

	/*
	 * get_datamaster method
     * generated by Doni's Framework Generator
	 *
	 * this method handle get datamaster request from datatables
	 *
	 * @author	Doni Setio Pambudi
	 * @access	public
	 * @return	json string
	 */
	public function get_datamaster(){
		//only ajax is allowed
		// if(!$this->input->is_ajax_request()) show_404();

		//$this->auth->set_access('view');
		//$this->auth->validate();

		$filter_cols = array('peg_fakultas' => /*uintval(*/$this->input->post('peg_fakultas')/*, TRUE)*/,'peg_jurusan' => /*uintval(*/$this->input->post('peg_jurusan')/*, TRUE)*/);
		//$add_where = '';
		//set default where query
		$where = build_masterpage_filter($filter_cols /*, $add_where */);

		//get data
		$this->m_pegawai->get_datatable($where);
	}

	/*
	 * detail method
     * generated by Doni's Framework Generator
	 *
	 * this method handle get data detail from one primary key
	 *
	 * @author	Doni Setio Pambudi
	 * @access	public
	 * @return		json string
	 */
	public function detail(){
		//only ajax is allowed
		if(!$this->input->is_ajax_request()) show_404();

		//$this->auth->set_access('view');
		//$this->auth->validate();

		//search data with pk for default
		$search_data = $this->input->post('peg_id');
		//if no search data exist, response error
		if($search_data === NULL)
			ajax_response('error');

		//activate if search data is integer
		//$search_data = uintval($search_data);

		//get detail
		$detail = $this->m_pegawai->get_by_column($search_data);

		//output return value
		if($detail !== NULL) ajax_response('ok', '', $detail);
		else ajax_response('error');
	}

	/*
	 * add method
     * generated by Doni's Framework Generator
	 *
	 * this method handle add data submit from master framework
	 *
	 * @author	Doni Setio Pambudi
	 * @access	public
	 * @return		json string result ok or error
	 */
	public function add(){
		//$this->auth->set_access('add');
		//$this->auth->validate();

		//call save method
		$this->save();
	}

	/*
	 * edit method
     * generated by Doni's Framework Generator
	 *
	 * this method handle edit data submit from master framework
	 *
	 * @author	Doni Setio Pambudi
	 * @access	public
	 * @return		json string result ok or error
	 */
	public function edit(){
		//$this->auth->set_access('edit');
		//$this->auth->validate();

		//call save method
		$this->save();
	}

	/*
	 * save method
     * generated by Doni's Framework Generator
	 *
	 * private method handle add and edit method
	 *
	 * @author	Doni Setio Pambudi
	 * @access	private
	 * @return		json string result ok or error
	 */
	private function save(){
		if(!$this->input->is_ajax_request()) show_404();

		//validation
		$this->load->library('form_validation');
		$this->form_validation->set_rules('peg_id'                             , 'lang:peg_id'                             , 'integer');
		$this->form_validation->set_rules('peg_perguruan_tinggi'               , 'lang:peg_perguruan_tinggi'               , 'trim|max_length[255]');
		$this->form_validation->set_rules('peg_fakultas'                       , 'lang:peg_fakultas'                       , 'trim|max_length[3]');
		$this->form_validation->set_rules('peg_jurusan'                        , 'lang:peg_jurusan'                        , 'trim|max_length[3]');
		$this->form_validation->set_rules('peg_program_studi'                  , 'lang:peg_program_studi'                  , 'trim|max_length[255]');
		$this->form_validation->set_rules('peg_jenjang_pendidikan'             , 'lang:peg_jenjang_pendidikan'             , 'trim|max_length[255]');
		$this->form_validation->set_rules('peg_satuan_kerja'                   , 'lang:peg_satuan_kerja'                   , 'trim|max_length[255]');
		$this->form_validation->set_rules('peg_ikatan_kerja_pegawai'           , 'lang:peg_ikatan_kerja_pegawai'           , 'trim|max_length[255]');
		$this->form_validation->set_rules('peg_status_aktivitas_pegawai'       , 'lang:peg_status_aktivitas_pegawai'       , 'trim|max_length[255]');
		$this->form_validation->set_rules('peg_jenis_pegawai'                  , 'lang:peg_jenis_pegawai'                  , 'trim|max_length[255]');
		$this->form_validation->set_rules('peg_jenis_dosen'                    , 'lang:peg_jenis_dosen'                    , 'trim|max_length[255]');
		$this->form_validation->set_rules('peg_pangkat_pns'                    , 'lang:peg_pangkat_pns'                    , 'trim|max_length[255]');
		$this->form_validation->set_rules('peg_jabatan_fungsional'             , 'lang:peg_jabatan_fungsional'             , 'trim|max_length[255]');
		$this->form_validation->set_rules('peg_jabatan_struktural'             , 'lang:peg_jabatan_struktural'             , 'trim|max_length[255]');
		$this->form_validation->set_rules('peg_jenis_kelamin'                  , 'lang:peg_jenis_kelamin'                  , 'trim|exact_length[1]');
		$this->form_validation->set_rules('peg_provinsi'                       , 'lang:peg_provinsi'                       , 'trim|max_length[255]');
		$this->form_validation->set_rules('peg_kota'                           , 'lang:peg_kota'                           , 'trim|max_length[255]');
		$this->form_validation->set_rules('peg_kode_pos'                       , 'lang:peg_kode_pos'                       , 'trim|max_length[255]');
		$this->form_validation->set_rules('peg_kode_validasi'                , 'lang:peg_kode_validasi'                , 'trim|max_length[3]');
		$this->form_validation->set_rules('peg_log_audit'                      , 'lang:peg_log_audit'                      , 'trim|max_length[255]');
		$this->form_validation->set_rules('peg_nip_baru'                       , 'lang:peg_nip_baru'                       , 'trim|max_length[255]');
		$this->form_validation->set_rules('peg_nip_lama'                       , 'lang:peg_nip_lama'                       , 'trim|max_length[255]');
		$this->form_validation->set_rules('peg_nidn'                           , 'lang:peg_nidn'                           , 'trim|max_length[255]');
		$this->form_validation->set_rules('peg_name'                           , 'lang:peg_name'                           , 'trim|max_length[255]');
		$this->form_validation->set_rules('peg_nomor_ktp'                      , 'lang:peg_nomor_ktp'                      , 'trim|max_length[255]');
		$this->form_validation->set_rules('peg_gelar_depan'   , 'lang:peg_gelar_depan'   , 'trim|max_length[255]');
		$this->form_validation->set_rules('peg_gelar_belakang', 'lang:peg_gelar_belakang', 'trim|max_length[255]');
		$this->form_validation->set_rules('peg_tempat_lahir'                   , 'lang:peg_tempat_lahir'                   , 'trim|max_length[255]');
		$this->form_validation->set_rules('peg_tanggal_lahir'                  , 'lang:peg_tanggal_lahir'                  , 'valid_datetime');
		$this->form_validation->set_rules('peg_alamat'                         , 'lang:peg_alamat'                         , 'trim|max_length[255]');
		$this->form_validation->set_rules('peg_telepon'                        , 'lang:peg_telepon'                        , 'trim|max_length[255]');
		$this->form_validation->set_rules('peg_handphone'                      , 'lang:peg_handphone'                      , 'trim|max_length[255]');
		$this->form_validation->set_rules('peg_email'                          , 'lang:peg_email'                          , 'trim|max_length[255]');
		$this->form_validation->set_rules('peg_tanggal_berhenti'               , 'lang:peg_tanggal_berhenti'               , 'valid_datetime');
		$this->form_validation->set_rules('peg_tanggal_masuk'                  , 'lang:peg_tanggal_masuk'                  , 'valid_datetime');
		$this->form_validation->set_rules('peg_nomor_sertifikasi'              , 'lang:peg_nomor_sertifikasi'              , 'trim|max_length[255]');
		$this->form_validation->set_rules('peg_tanggal_keluar_sertifikasi'     , 'lang:peg_tanggal_keluar_sertifikasi'     , 'trim|max_length[255]');
		$this->form_validation->set_rules('peg_is_dosen'                       , 'lang:peg_is_dosen'                       , 'trim|max_length[255]');
		$this->form_validation->set_rules('peg_periode_pelaporan'              , 'lang:peg_periode_pelaporan'              , 'trim|max_length[255]');
		$this->form_validation->set_rules('peg_google_schoolar'                , 'lang:peg_google_schoolar'                , 'trim|max_length[255]');
		$this->form_validation->set_rules('peg_penelitian'                     , 'lang:peg_penelitian'                     , 'trim|max_length[255]');
		$this->form_validation->set_rules('peg_created_at'                     , 'lang:peg_created_at'                     , 'valid_datetime');
		$this->form_validation->set_rules('peg_updated_at'                     , 'lang:peg_updated_at'                     , 'valid_datetime');
		$this->form_validation->set_rules('peg_deleted_at'                     , 'lang:peg_deleted_at'                     , 'valid_datetime');

		if ($this->form_validation->run())
		{
			// insert
			if($this->input->post('peg_id') == '')
			{
				$peg_id = $this->m_pegawai->insert(
					$this->input->post('peg_perguruan_tinggi'),
					$this->input->post('peg_fakultas'),
					$this->input->post('peg_jurusan'),
					$this->input->post('peg_program_studi'),
					$this->input->post('peg_jenjang_pendidikan'),
					$this->input->post('peg_satuan_kerja'),
					$this->input->post('peg_ikatan_kerja_pegawai'),
					$this->input->post('peg_status_aktivitas_pegawai'),
					$this->input->post('peg_jenis_pegawai'),
					$this->input->post('peg_jenis_dosen'),
					$this->input->post('peg_pangkat_pns'),
					$this->input->post('peg_jabatan_fungsional'),
					$this->input->post('peg_jabatan_struktural'),
					$this->input->post('peg_jenis_kelamin'),
					$this->input->post('peg_provinsi'),
					$this->input->post('peg_kota'),
					$this->input->post('peg_kode_pos'),
					$this->input->post('peg_kode_validasi'),
					$this->input->post('peg_log_audit'),
					$this->input->post('peg_nip_baru'),
					$this->input->post('peg_nip_lama'),
					$this->input->post('peg_nidn'),
					$this->input->post('peg_name'),
					$this->input->post('peg_nomor_ktp'),
					$this->input->post('peg_gelar_depan'),
					$this->input->post('peg_gelar_belakang'),
					$this->input->post('peg_tempat_lahir'),
					$this->input->post('peg_tanggal_lahir'),
					$this->input->post('peg_alamat'),
					$this->input->post('peg_telepon'),
					$this->input->post('peg_handphone'),
					$this->input->post('peg_email'),
					$this->input->post('peg_tanggal_berhenti'),
					$this->input->post('peg_tanggal_masuk'),
					$this->input->post('peg_nomor_sertifikasi'),
					$this->input->post('peg_tanggal_keluar_sertifikasi'),
					$this->input->post('peg_is_dosen'),
					$this->input->post('peg_periode_pelaporan'),
					$this->input->post('peg_google_schoolar'),
					$this->input->post('peg_penelitian'),
					$this->input->post('peg_created_at'),
					$this->input->post('peg_updated_at'),
					$this->input->post('peg_deleted_at')
				);

				ajax_response();
			}
			// update
			else
			{
				$pk_id = $this->input->post('peg_id');
				//check if pk integer
				//$pk_id = uintval($pk_id);
				$this->m_pegawai->update_multiple_column(
										array(
											'peg_email'=>$this->input->post("peg_email"),
											'peg_google_schoolar'=>$this->input->post("peg_google_schoolar"),
											'peg_updated_at'=>date("Y-m-d")
											), 
										$pk_id);
				$this->load->model("m_log_admin");
				$pegawai = $this->m_pegawai->get_by_column($pk_id);
				$this->m_log_admin->insert(1, now(), 'Sunting Profil Pegawai', $pegawai->peg_name);
					
				
				ajax_response();
			}
		}
		else
		{ ajax_response('error', validation_errors()); }
	}

	/*
	 * delete method
     * generated by Doni's Framework Generator
	 *
	 * method handle delete from master framework
	 *
	 * @author	Doni Setio Pambudi
	 * @access	public
	 * @return		json string result ok or error
	 */
	public function delete(){
		if(!$this->input->is_ajax_request()) show_404();

		//$this->auth->set_access('delete');
		//$this->auth->validate();

		if($this->input->post('peg_id') === NULL) ajax_response();

		$all_deleted = array();
		foreach($this->input->post('peg_id') as $row){
			//$row = uintval($row);
			//permanent delete row, check MY_Model, you can set flag with ->update_single_column
			$this->m_pegawai->permanent_delete($row);

			//this is sample code if you cannot delete, but you must update status
			//$this->m_pegawai->update_single_column('peg_deleted', 1, $row);
			$all_deleted[] = $row;
		}
		write_log('pegawai', 'delete', 'PK = ' . implode(",", $all_deleted));

		ajax_response();
	}
	public function import_data() {
        //if(!$this->input->is_ajax_request()) show_404();

        $data = $this->input->post('data');
        $numrows = count($data);
        //usort($data, array("student","sortorder"));
        if ($numrows > 0) {
        	$index = 0;
			foreach ($data as $row) {
				if($index++ == 0) continue;
				$nip = $row[3];
				$link_scholar = $row[5];
				$pegawai = $this->m_pegawai->get_by_column('' . $nip, "peg_nip_baru");
				//var_dump("asdasd"); exit();
				$this->m_pegawai->update_multiple_column(
										array(
											'peg_google_schoolar'=>$link_scholar,
											'peg_updated_at'=>date("Y-m-d")
											), 
										$pegawai->peg_id);
			}
			ajax_response();
        } else {
			ajax_response('error', "File Kosong");
        }
    }

	/*
	 * tarik data manual
	 *
	 * method untuk menampilkan view tarik data oleh admin secara manual
	 *
	 * @author	Rizki Kurnia Putera
	 * @access	public
	 * @return  view
	 */
	public function tarik_data(){
		$this->auth->validate(TRUE, TRUE);
		//set informasi halaman
		$this->site_info->set_page_title($this->lang->line('module_unduh_title'), $this->lang->line('module_subtitle'));
		//set breadcrumb
		$this->site_info->add_breadcrumb($this->lang->line('module_unduh_title'));
		//add menu highlight
		$this->site_info->set_current_module('pegawai_tarik_data');

		//add masterpage script
		$this->asset_library->add_masterpage_script();
		//add page javascript
		$this->asset_library->add_js('js/pages/tarik_data_pegawai.js');

		$data = array();
		$this->load->model('m_fakultas');
		$data['fakultas'] = $this->m_fakultas->get("fak_singkatan is not NULL", "fak_id asc");
		$this->load->model('m_jurusan');
		$data['jurusan'] = $this->m_jurusan->get("jur_nama_inggris is not NULL", "jur_id asc");

		//load view
		$this->load->view('base/header');
		$this->load->view('pegawai/tarik_data', $data);
		$this->load->view('base/footer');
	}
}